package Processors

import org.apache.spark.sql.functions._
import org.apache.spark.sql.{DataFrame, SparkSession}

object CTeSimpProcessor {
  def generateSelectedDF(parsedDF: DataFrame)(implicit spark: SparkSession): DataFrame = {
    import spark.implicits._ // Habilita o uso de $"coluna"

    parsedDF.select(
      $"NSUSVD",
      concat(
        substring($"DHPROC", 7, 4),
        substring($"DHPROC", 4, 2),
        substring($"DHPROC", 1, 2),
        substring($"DHPROC", 12, 2)
      ).as("DHPROC_FORMATADO"),
      $"DHEMI",
      $"IP_TRANSMISSOR",
      $"MODELO",
      $"TPEMIS",
//      $"parsed.protCTe.infProt._Id".as("infprot_Id"),
      $"parsed.protCTe.infProt.chCTe".as("chave"),
      $"parsed.protCTe.infProt.cStat".as("infprot_cstat"),
      $"parsed.CTeSimp.infCTeSupl.qrCodCTe".as("qrCodCTe"),
//      $"parsed.CTeSimp.infCte._Id".as("cte_Id"),
      $"parsed.CTeSimp.infCte._versao".as("cte_versao"),
      $"parsed.CTeSimp.infCte.compl.ObsCont".as("obsCont"), // Mantém o array intacto
      $"parsed.CTeSimp.infCte.compl.fluxo.xDest".as("xDest"),
      $"parsed.CTeSimp.infCte.compl.fluxo.xOrig".as("xOrig"),
      $"parsed.CTeSimp.infCte.compl.fluxo.xRota".as("xRota"),
      $"parsed.CTeSimp.infCte.compl.xCaracAd".as("xCaracAd"),
      $"parsed.CTeSimp.infCte.compl.xObs".as("xObs"),
      $"parsed.CTeSimp.infCte.det".as("det"), // Mantém o array intacto
      $"parsed.CTeSimp.infCte.emit.CNPJ".as("emit_CNPJ"),
      $"parsed.CTeSimp.infCte.emit.CRT".as("emit_CRT"),
      $"parsed.CTeSimp.infCte.emit.IE".as("emit_IE"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.CEP".as("emit_CEP"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.UF".as("emit_UF"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.cMun".as("emit_cMun"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.fone".as("emit_fone"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.nro".as("emit_nro"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.xBairro".as("emit_xBairro"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.xLgr".as("emit_xLgr"),
      $"parsed.CTeSimp.infCte.emit.enderEmit.xMun".as("emit_xMun"),
      $"parsed.CTeSimp.infCte.emit.xFant".as("emit_xFant"),
      $"parsed.CTeSimp.infCte.emit.xNome".as("emit_xNome"),
      $"parsed.CTeSimp.infCte.ide.CFOP".as("ide_CFOP"),
      $"parsed.CTeSimp.infCte.ide.UFEnv".as("ide_UFEnv"),
      $"parsed.CTeSimp.infCte.ide.UFFim".as("ide_UFFim"),
      $"parsed.CTeSimp.infCte.ide.UFIni".as("ide_UFIni"),
      $"parsed.CTeSimp.infCte.ide.cCT".as("ide_cCT"),
      $"parsed.CTeSimp.infCte.ide.cDV".as("ide_cDV"),
      $"parsed.CTeSimp.infCte.ide.cMunEnv".as("ide_cMunEnv"),
      $"parsed.CTeSimp.infCte.ide.cUF".as("ide_cUF"),
      $"parsed.CTeSimp.infCte.ide.dhEmi".as("ide_dhEmi"),
      $"parsed.CTeSimp.infCte.ide.mod".as("ide_mod"),
      $"parsed.CTeSimp.infCte.ide.modal".as("ide_modal"),
      $"parsed.CTeSimp.infCte.ide.nCT".as("ide_nCT"),
      $"parsed.CTeSimp.infCte.ide.natOp".as("ide_natOp"),
      $"parsed.CTeSimp.infCte.ide.procEmi".as("ide_procEmi"),
      $"parsed.CTeSimp.infCte.ide.retira".as("ide_retira"),
      $"parsed.CTeSimp.infCte.ide.serie".as("ide_serie"),
      $"parsed.CTeSimp.infCte.ide.tpAmb".as("ide_tpAmb"),
      $"parsed.CTeSimp.infCte.ide.tpCTe".as("ide_tpCTe"),
      $"parsed.CTeSimp.infCte.ide.tpEmis".as("ide_tpEmis"),
      $"parsed.CTeSimp.infCte.ide.tpImp".as("ide_tpImp"),
      $"parsed.CTeSimp.infCte.ide.tpServ".as("ide_tpServ"),
      $"parsed.CTeSimp.infCte.ide.verProc".as("ide_verProc"),
      $"parsed.CTeSimp.infCte.ide.xMunEnv".as("ide_xMunEnv"),
      $"parsed.CTeSimp.infCte.imp.ICMS.ICMS00.CST".as("icms_CST"),
      $"parsed.CTeSimp.infCte.imp.ICMS.ICMS00.pICMS".as("icms_pICMS"),
      $"parsed.CTeSimp.infCte.imp.ICMS.ICMS00.vBC".as("icms_vBC"),
      $"parsed.CTeSimp.infCte.imp.ICMS.ICMS00.vICMS".as("icms_vICMS"),
      $"parsed.CTeSimp.infCte.imp.vTotTrib".as("vTotTrib"),
      $"parsed.CTeSimp.infCte.infCarga.infQ".as("infQ"), // Mantém o array intacto
      $"parsed.CTeSimp.infCte.infCarga.proPred".as("proPred"),
      $"parsed.CTeSimp.infCte.infCarga.vCarga".as("vCarga"),
      $"parsed.CTeSimp.infCte.infCarga.vCargaAverb".as("vCargaAverb"),
      $"parsed.CTeSimp.infCte.infModal._versaoModal".as("versaoModal"),
      $"parsed.CTeSimp.infCte.infModal.rodo.RNTRC".as("rodo_RNTRC"),
      $"parsed.CTeSimp.infCte.infRespTec.CNPJ".as("respTec_CNPJ"),
      $"parsed.CTeSimp.infCte.infRespTec.email".as("respTec_email"),
      $"parsed.CTeSimp.infCte.infRespTec.fone".as("respTec_fone"),
      $"parsed.CTeSimp.infCte.infRespTec.xContato".as("respTec_xContato"),
      $"parsed.CTeSimp.infCte.toma.CNPJ".as("toma_CNPJ"),
      $"parsed.CTeSimp.infCte.toma.IE".as("toma_IE"),
      $"parsed.CTeSimp.infCte.toma.enderToma.CEP".as("toma_CEP"),
      $"parsed.CTeSimp.infCte.toma.enderToma.UF".as("toma_UF"),
      $"parsed.CTeSimp.infCte.toma.enderToma.cMun".as("toma_cMun"),
      $"parsed.CTeSimp.infCte.toma.enderToma.cPais".as("toma_cPais"),
      $"parsed.CTeSimp.infCte.toma.enderToma.nro".as("toma_nro"),
      $"parsed.CTeSimp.infCte.toma.enderToma.xBairro".as("toma_xBairro"),
      $"parsed.CTeSimp.infCte.toma.enderToma.xLgr".as("toma_xLgr"),
      $"parsed.CTeSimp.infCte.toma.enderToma.xMun".as("toma_xMun"),
      $"parsed.CTeSimp.infCte.toma.enderToma.xPais".as("toma_xPais"),
      $"parsed.CTeSimp.infCte.toma.fone".as("toma_fone"),
      $"parsed.CTeSimp.infCte.toma.indIEToma".as("toma_indIEToma"),
      $"parsed.CTeSimp.infCte.toma.toma".as("toma_toma"),
      $"parsed.CTeSimp.infCte.toma.xNome".as("toma_xNome"),
      $"parsed.CTeSimp.infCte.total.vTPrest".as("vTPrest"),
      $"parsed.CTeSimp.infCte.total.vTRec".as("vTRec")
    )
  }
}